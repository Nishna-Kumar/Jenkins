pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                // Use Maven to build the code
                sh 'mvn clean package'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests...'
                // Run unit tests using a test automation tool (e.g., JUnit)
                sh 'mvn test'
                
                echo 'Running integration tests...'
                // Run integration tests using a test automation tool (e.g., Selenium)
                sh 'mvn integration-test'
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Integrate a code analysis tool (e.g., SonarQube) to analyze the code
                sh 'mvn sonar:sonar'
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Perform a security scan using a tool (e.g., OWASP Dependency-Check) to identify vulnerabilities
                sh 'dependency-check.sh --scan /Jenkins'
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging server...'
                // Deploy the application to a staging server (e.g., AWS EC2 instance)
                // Use appropriate deployment commands or plugins
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
                // Run integration tests on the staging environment
                // Use appropriate commands or plugins
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production server...'
                // Deploy the application to a production server (e.g., AWS EC2 instance)
                // Use appropriate deployment commands or plugins
            }
        }
    }
    
    post {
        success {
            echo 'Build succeeded! Sending email notification...'
            emailext subject: "Pipeline Success: ${env.JOB_NAME} (${env.BUILD_NUMBER})",
                      body: "The pipeline ${env.JOB_NAME} (${env.BUILD_NUMBER}) has succeeded.\n\nCheck the attached logs for details.",
                      to: 'nishna202@gmail.com',
                      attachLog: true
        }
        failure {
            echo 'Build failed! Sending email notification...'
            emailext subject: "Pipeline Failure: ${env.JOB_NAME} (${env.BUILD_NUMBER})",
                      body: "The pipeline ${env.JOB_NAME} (${env.BUILD_NUMBER}) has failed.\n\nCheck the attached logs for details.",
                      to: 'nishna202@gmail.com',
                      attachLog: true
        }
    }
}
